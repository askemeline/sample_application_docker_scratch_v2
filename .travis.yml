language: java

services:
  - docker

jobs:
  include:
    - stage: test
      if: branch = dev
      script:
        - cd simple-api/
        - mvn clean verify
        - cd ../
    - stage: publish_api
      if: branch = dev
      script:
        - docker build -t $DOCKERHUB_USER/tp-api ./simple-api
      after_success:
        - echo $DOCKERHUB_PWD | docker login --username $DOCKERHUB_USER --password-stdin
        - docker tag $DOCKERHUB_USER/tp-api $DOCKERHUB_USER/tp-api:1.1
        - docker push $DOCKERHUB_USER/tp-api
    - stage: publish_data
      if: branch = dev
      script:
        - docker build -t $DOCKERHUB_USER/tp-db ./database
      after_success:
        - echo $DOCKERHUB_PWD | docker login --username $DOCKERHUB_USER --password-stdin
        - docker tag $DOCKERHUB_USER/tp-db $DOCKERHUB_USER/tp-db:1.1
        - docker push $DOCKERHUB_USER/tp-db
    - stage: publish_httpd
      if: branch = dev
      script:
        - docker build -t $DOCKERHUB_USER/tp-httpd ./httpd
      after_success:
        - echo $DOCKERHUB_PWD | docker login --username $DOCKERHUB_USER --password-stdin
        - docker tag $DOCKERHUB_USER/tp-httpd $DOCKERHUB_USER/tp-httpd:1.1
        - docker push $DOCKERHUB_USER/tp-httpd
    - stage: deploy
      #   if: branch = master
      addons:
        ssh_known_hosts: emeline-garo.takima.io
        apt:
          packages:
            - python-pip
      install:
        - pip install ansible
        - ansible --version
        - printf '[defaults]\nroles_path=../' >ansible.cfg
      script:
        # - ansible-playbook -i ansible/inventories/setup.yml ansible/playbook.yml
